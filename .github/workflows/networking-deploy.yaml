name: Deploy hub components

on:
  push:
    paths:
      - 'networking/*'
      - '.github/workflows/networking-deploy.yaml'
    branches: [ main ]
  pull_request:
    paths:
      - 'networking/*'
      - '.github/workflows/networking-deploy.yaml'
    branches: [ main ]

env:
  DEFAULT_LOCATION: westeurope
        
jobs:
  deploy-networking:
    name: Create resource groups
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Login into your Azure Subscription using your Azure credentials - make sure the credentials has write permissions for the specific resource group/subscription. The credentials should be stored in GitHub Secrets - (Go to Settings Tab ->Secrets)
    - name: Azure Login
      uses: Azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Create resource groups for hubs and spokes networking resources
    - name: Azure CLI - Create Networking related RGs
      id: create-net-rgs
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az deployment sub $([[ ${{ github.event_name }} = pull_request ]] && echo what-if --no-pretty-print || echo create) \
              --template-file "networking/resource-groups.json" \
              --name "resource-groups" \
              --parameters  "@networking/networking.parameters.dev.json" \
              --location=${{ env.DEFAULT_LOCATION }}

          echo "::set-output name=spokes-rg::$(az deployment sub show -n resource-groups --query properties.outputs.spokesRg.value -o tsv)"
          echo "::set-output name=hubs-rg::$(az deployment sub show -n resource-groups --query properties.outputs.hubsRg.value -o tsv)"
          echo "::set-output name=spokes-rg-name::$(az deployment sub show -n resource-groups --query properties.outputs.spokesRgName.value -o tsv)"
          echo "::set-output name=hubs-rg-name::$(az deployment sub show -n resource-groups --query properties.outputs.hubsRgName.value -o tsv)"


        azcliversion: latest

    # Create Hub
    - name: Azure CLI - Create Hub
      id: create-hub
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |

          az deployment group $([[ ${{ github.event_name }} = pull_request ]] && echo what-if --no-pretty-print || echo create) \
              --resource-group ${{ steps.create-net-rgs.outputs.hubs-rg-name }} \
              --template-file networking/hub-default.json --parameters location=${{ env.DEFAULT_LOCATION }}

          echo "::set-output name=hubVnetId::$(az deployment group show \
              --resource-group ${{ steps.create-net-rgs.outputs.hubs-rg-name }} -n hub-default \
              --query properties.outputs.hubVnetId.value -o tsv)"

        azcliversion: latest

    # Create Spoke
    - name: Azure CLI - Create Spoke
      id: create-spoke
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |

          az deployment group $([[ ${{ github.event_name }} = pull_request ]] && echo what-if --no-pretty-print || echo create) \
              --resource-group ${{ steps.create-net-rgs.outputs.spokes-rg-name }} \
              --template-file networking/spoke-default.json --parameters location=${{ env.DEFAULT_LOCATION }} \
              hubVnetResourceId=${{ steps.create-hub.outputs.hubVnetId }} clusterName="@networking/cluster-name.parameter.dev.json" \

          echo "::set-output name=clusterVnetResourceId::$(az deployment group show \
              --resource-group ${{ steps.create-net-rgs.outputs.spokes-rg-name }} -n spoke-default \
              --query properties.outputs.clusterVnetResourceId.value -o tsv)"
          echo "::set-output name=nodepoolSubnetResourceIds::$(az deployment group show \
              --resource-group ${{ steps.create-net-rgs.outputs.spokes-rg-name }} -n spoke-default \
              --query properties.outputs.nodepoolSubnetResourceIds.value -o tsv)"
          echo "::set-output name=appGwPublicIpAddress::$(az deployment group show \
              --resource-group ${{ steps.create-net-rgs.outputs.spokes-rg-name }} -n spoke-default \
              --query properties.outputs.appGwPublicIpAddress.value -o tsv)"
          echo "::set-output name=clusterSubnetPrefix::$(az deployment group show \
              --resource-group ${{ steps.create-net-rgs.outputs.spokes-rg-name }} -n spoke-default \
              --query properties.outputs.clusterSubnetPrefix.value -o tsv)"
          echo "::set-output name=gatewaySubnetPrefix::$(az deployment group show \
              --resource-group ${{ steps.create-net-rgs.outputs.spokes-rg-name }} -n spoke-default \
              --query properties.outputs.gatewaySubnetPrefix.value -o tsv)"

        azcliversion: latest